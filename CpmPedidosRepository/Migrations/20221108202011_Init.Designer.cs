// <auto-generated />
using System;
using CpmPedidosRepository.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CpmPedidosRepository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221108202011_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CpmPedidosDomain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("Cep");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)")
                        .HasColumnName("Complement");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)")
                        .HasColumnName("District");

                    b.Property<int>("IdCity")
                        .HasColumnType("integer")
                        .HasColumnName("Id_City");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Number");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Street");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("IdCity");

                    b.ToTable("tb_endereco", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.CategoryProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_categoria_produto", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("tb_cidade", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("Cpf");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<int>("IdAddress")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("IdAddress")
                        .IsUnique();

                    b.ToTable("tb_cliente", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<int>("IdImage")
                        .HasColumnType("integer")
                        .HasColumnName("Id_image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("numeric(17,2)")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("IdImage");

                    b.ToTable("tb_combo", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("File_Name");

                    b.Property<bool>("Main")
                        .HasColumnType("boolean")
                        .HasColumnName("Main");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_imagem", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.ImageProduct", b =>
                {
                    b.Property<int>("IdImage")
                        .HasColumnType("integer")
                        .HasColumnName("id_image");

                    b.Property<int>("IdProduct")
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    b.HasKey("IdImage", "IdProduct");

                    b.HasIndex("IdProduct");

                    b.ToTable("tb_image_product", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Description");

                    b.Property<int>("IdCategoryProduct")
                        .HasColumnType("integer")
                        .HasColumnName("Id_category_product");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("numeric(17,2)")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoryProduct");

                    b.ToTable("tb_produto", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.ProductCombo", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    b.Property<int>("IdCombo")
                        .HasColumnType("integer")
                        .HasColumnName("id_combo");

                    b.HasKey("IdProduct", "IdCombo");

                    b.HasIndex("IdCombo");

                    b.ToTable("tb_product_combo", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.PromotionProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("Active");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<int>("IdImage")
                        .HasColumnType("integer")
                        .HasColumnName("Id_image");

                    b.Property<int>("IdProduct")
                        .HasColumnType("integer")
                        .HasColumnName("Id_product");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("numeric(17,2)")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("IdImage");

                    b.HasIndex("IdProduct");

                    b.ToTable("tb_promocao_produto", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(17, 2)
                        .HasColumnType("numeric(17,2)")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<TimeSpan>("Delivery")
                        .HasColumnType("interval")
                        .HasColumnName("Delivery");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("Id_client");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Number");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("tb_pedido", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.RequestProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created_In");

                    b.Property<int>("IdProduct")
                        .HasColumnType("integer")
                        .HasColumnName("Id_product");

                    b.Property<int>("IdRequest")
                        .HasColumnType("integer")
                        .HasColumnName("Id_request");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("numeric(17,2)")
                        .HasColumnName("Price");

                    b.Property<int>("Quantity")
                        .HasPrecision(2)
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("IdRequest");

                    b.ToTable("tb_produto_pedido", (string)null);
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Address", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.City", "Cities")
                        .WithMany()
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Client", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Address", "Addresses")
                        .WithOne("Clients")
                        .HasForeignKey("CpmPedidosDomain.Entities.Client", "IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Combo", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Image", "Images")
                        .WithMany()
                        .HasForeignKey("IdImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Images");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.ImageProduct", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("IdImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CpmPedidosDomain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Product", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.CategoryProduct", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IdCategoryProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.ProductCombo", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("IdCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CpmPedidosDomain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.PromotionProduct", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Image", "Images")
                        .WithMany()
                        .HasForeignKey("IdImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CpmPedidosDomain.Entities.Product", "Products")
                        .WithMany("Promotions")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Images");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Request", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Client", "Client")
                        .WithMany("Requests")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.RequestProduct", b =>
                {
                    b.HasOne("CpmPedidosDomain.Entities.Product", "Products")
                        .WithMany()
                        .HasForeignKey("IdRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CpmPedidosDomain.Entities.Request", "Requests")
                        .WithMany("RequestsProducts")
                        .HasForeignKey("IdRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Address", b =>
                {
                    b.Navigation("Clients")
                        .IsRequired();
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.CategoryProduct", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Client", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Product", b =>
                {
                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("CpmPedidosDomain.Entities.Request", b =>
                {
                    b.Navigation("RequestsProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
